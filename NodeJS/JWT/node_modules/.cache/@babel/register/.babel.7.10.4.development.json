{
  "{\"sourceRoot\":\"/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT\",\"filename\":\"/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT\",\"plugins\":[],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT",
      "filename": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "require('Express'); // from 'express'\n\n\nrequire('bodyParser'); // from 'body-parser'\n\n\nrequire({\n  verifyToken,\n  protectRoute\n});\n\nrequire({\n  generateToken\n});\n\nconst app = Express();\nconst port = 3000;\napp.set('json spaces', 2);\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(verifyToken);\napp.get('/', (req, res) => res.send('Olá mundo pelo Express!'));\napp.post('/login', (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n\n  if (username !== 'admin' || password !== '123456') {\n    return res.status(400).send({\n      error: 'Usuário ou senha inválidos!'\n    });\n  }\n\n  const payload = {\n    sub: 1,\n    name: 'Nome Usuário',\n    roles: ['admin']\n  };\n  const token = generateToken(payload);\n  res.send({\n    token\n  });\n});\napp.get('/protected', protectRoute, (req, res) => res.send(req.decoded));\napp.listen(port, () => console.log('Api rodando na porta 3000'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJ2ZXJpZnlUb2tlbiIsInByb3RlY3RSb3V0ZSIsImdlbmVyYXRlVG9rZW4iLCJhcHAiLCJFeHByZXNzIiwicG9ydCIsInNldCIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwicG9zdCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJib2R5Iiwic3RhdHVzIiwiZXJyb3IiLCJwYXlsb2FkIiwic3ViIiwibmFtZSIsInJvbGVzIiwidG9rZW4iLCJkZWNvZGVkIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQyxTQUFELENBQVAsQyxDQUFrQjs7O0FBQ2xCQSxPQUFPLENBQUMsWUFBRCxDQUFQLEMsQ0FBcUI7OztBQUVyQkEsT0FBTyxDQUFDO0FBQ0pDLEVBQUFBLFdBREk7QUFFSkMsRUFBQUE7QUFGSSxDQUFELENBQVA7O0FBSUFGLE9BQU8sQ0FBRTtBQUFFRyxFQUFBQTtBQUFGLENBQUYsQ0FBUDs7QUFFQSxNQUFNQyxHQUFHLEdBQUdDLE9BQU8sRUFBbkI7QUFDQSxNQUFNQyxJQUFJLEdBQUcsSUFBYjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxhQUFSLEVBQXVCLENBQXZCO0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRQyxVQUFVLENBQUNDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUVAsV0FBUjtBQUVBRyxHQUFHLENBQUNRLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLHlCQUFULENBQTNCO0FBRUFYLEdBQUcsQ0FBQ1ksSUFBSixDQUFTLFFBQVQsRUFBbUIsQ0FBQ0gsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDN0IsUUFBTTtBQUFFRyxJQUFBQSxRQUFGO0FBQVlDLElBQUFBO0FBQVosTUFBeUJMLEdBQUcsQ0FBQ00sSUFBbkM7O0FBRUEsTUFBSUYsUUFBUSxLQUFLLE9BQWIsSUFBd0JDLFFBQVEsS0FBSyxRQUF6QyxFQUFtRDtBQUMvQyxXQUFPSixHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCTCxJQUFoQixDQUFxQjtBQUFFTSxNQUFBQSxLQUFLLEVBQUU7QUFBVCxLQUFyQixDQUFQO0FBQ0g7O0FBRUQsUUFBTUMsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLEdBQUcsRUFBRSxDQURPO0FBRVpDLElBQUFBLElBQUksRUFBRSxjQUZNO0FBR1pDLElBQUFBLEtBQUssRUFBRSxDQUFDLE9BQUQ7QUFISyxHQUFoQjtBQUtBLFFBQU1DLEtBQUssR0FBR3ZCLGFBQWEsQ0FBQ21CLE9BQUQsQ0FBM0I7QUFFQVIsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFDTFcsSUFBQUE7QUFESyxHQUFUO0FBR0gsQ0FqQkQ7QUFtQkF0QixHQUFHLENBQUNRLEdBQUosQ0FBUSxZQUFSLEVBQXNCVixZQUF0QixFQUFvQyxDQUFDVyxHQUFELEVBQU1DLEdBQU4sS0FBY0EsR0FBRyxDQUFDQyxJQUFKLENBQVNGLEdBQUcsQ0FBQ2MsT0FBYixDQUFsRDtBQUdBdkIsR0FBRyxDQUFDd0IsTUFBSixDQUFXdEIsSUFBWCxFQUFpQixNQUFNdUIsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVosQ0FBdkIiLCJzb3VyY2VSb290IjoiL2hvbWUvZWh1bWFuL0Rlc2t0b3AvSmF2YV9EaWdpdGFsSW5ub3ZhdGlvbi9Ob2RlSlMvSldUL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdFeHByZXNzJykvLyBmcm9tICdleHByZXNzJ1xucmVxdWlyZSgnYm9keVBhcnNlcicpLy8gZnJvbSAnYm9keS1wYXJzZXInXG5cbnJlcXVpcmUoe1xuICAgIHZlcmlmeVRva2VuLFxuICAgIHByb3RlY3RSb3V0ZVxufSApXG5yZXF1aXJlKCB7IGdlbmVyYXRlVG9rZW4gfSkgXG5cbmNvbnN0IGFwcCA9IEV4cHJlc3MoKVxuY29uc3QgcG9ydCA9IDMwMDBcblxuYXBwLnNldCgnanNvbiBzcGFjZXMnLCAyKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKVxuYXBwLnVzZSh2ZXJpZnlUb2tlbilcblxuYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoJ09sw6EgbXVuZG8gcGVsbyBFeHByZXNzIScpKVxuXG5hcHAucG9zdCgnL2xvZ2luJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5XG5cbiAgICBpZiAodXNlcm5hbWUgIT09ICdhZG1pbicgfHwgcGFzc3dvcmQgIT09ICcxMjM0NTYnKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7IGVycm9yOiAnVXN1w6FyaW8gb3Ugc2VuaGEgaW52w6FsaWRvcyEnIH0pXG4gICAgfVxuXG4gICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgc3ViOiAxLFxuICAgICAgICBuYW1lOiAnTm9tZSBVc3XDoXJpbycsXG4gICAgICAgIHJvbGVzOiBbJ2FkbWluJ11cbiAgICB9XG4gICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKHBheWxvYWQpXG5cbiAgICByZXMuc2VuZCh7XG4gICAgICAgIHRva2VuXG4gICAgfSlcbn0pXG5cbmFwcC5nZXQoJy9wcm90ZWN0ZWQnLCBwcm90ZWN0Um91dGUsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQocmVxLmRlY29kZWQpKVxuXG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gY29uc29sZS5sb2coJ0FwaSByb2RhbmRvIG5hIHBvcnRhIDMwMDAnKSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "verifyToken",
        "protectRoute",
        "generateToken",
        "app",
        "Express",
        "port",
        "set",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "get",
        "req",
        "res",
        "send",
        "post",
        "username",
        "password",
        "body",
        "status",
        "error",
        "payload",
        "sub",
        "name",
        "roles",
        "token",
        "decoded",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAAA,OAAO,CAAC,SAAD,CAAP,C,CAAkB;;;AAClBA,OAAO,CAAC,YAAD,CAAP,C,CAAqB;;;AAErBA,OAAO,CAAC;AACJC,EAAAA,WADI;AAEJC,EAAAA;AAFI,CAAD,CAAP;;AAIAF,OAAO,CAAE;AAAEG,EAAAA;AAAF,CAAF,CAAP;;AAEA,MAAMC,GAAG,GAAGC,OAAO,EAAnB;AACA,MAAMC,IAAI,GAAG,IAAb;AAEAF,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;AACAH,GAAG,CAACI,GAAJ,CAAQC,UAAU,CAACC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQP,WAAR;AAEAG,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,CAAS,yBAAT,CAA3B;AAEAX,GAAG,CAACY,IAAJ,CAAS,QAAT,EAAmB,CAACH,GAAD,EAAMC,GAAN,KAAc;AAC7B,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBL,GAAG,CAACM,IAAnC;;AAEA,MAAIF,QAAQ,KAAK,OAAb,IAAwBC,QAAQ,KAAK,QAAzC,EAAmD;AAC/C,WAAOJ,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACH;;AAED,QAAMC,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAE,CADO;AAEZC,IAAAA,IAAI,EAAE,cAFM;AAGZC,IAAAA,KAAK,EAAE,CAAC,OAAD;AAHK,GAAhB;AAKA,QAAMC,KAAK,GAAGvB,aAAa,CAACmB,OAAD,CAA3B;AAEAR,EAAAA,GAAG,CAACC,IAAJ,CAAS;AACLW,IAAAA;AADK,GAAT;AAGH,CAjBD;AAmBAtB,GAAG,CAACQ,GAAJ,CAAQ,YAAR,EAAsBV,YAAtB,EAAoC,CAACW,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,CAASF,GAAG,CAACc,OAAb,CAAlD;AAGAvB,GAAG,CAACwB,MAAJ,CAAWtB,IAAX,EAAiB,MAAMuB,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAvB",
      "sourceRoot": "/home/ehuman/Desktop/Java_DigitalInnovation/NodeJS/JWT/src/",
      "sourcesContent": [
        "require('Express')// from 'express'\nrequire('bodyParser')// from 'body-parser'\n\nrequire({\n    verifyToken,\n    protectRoute\n} )\nrequire( { generateToken }) \n\nconst app = Express()\nconst port = 3000\n\napp.set('json spaces', 2);\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(verifyToken)\n\napp.get('/', (req, res) => res.send('Olá mundo pelo Express!'))\n\napp.post('/login', (req, res) => {\n    const { username, password } = req.body\n\n    if (username !== 'admin' || password !== '123456') {\n        return res.status(400).send({ error: 'Usuário ou senha inválidos!' })\n    }\n\n    const payload = {\n        sub: 1,\n        name: 'Nome Usuário',\n        roles: ['admin']\n    }\n    const token = generateToken(payload)\n\n    res.send({\n        token\n    })\n})\n\napp.get('/protected', protectRoute, (req, res) => res.send(req.decoded))\n\n\napp.listen(port, () => console.log('Api rodando na porta 3000'))"
      ]
    },
    "sourceType": "module",
    "mtime": 1593633253269
  }
}